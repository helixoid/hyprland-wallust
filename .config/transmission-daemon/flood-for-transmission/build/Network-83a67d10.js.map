{"version":3,"file":"Network-83a67d10.js","sources":["../../src/components/Modal/Settings/Network.svelte"],"sourcesContent":["<script>\n  import Header from './Header.svelte';\n  import Input from '~components/Input';\n  import Checkbox from '~components/Checkbox';\n  import Button from '~components/Button';\n  import Icon from '~components/Icon';\n  import { session, modals, alerts } from '~helpers/stores';\n  import {\n    SESSION_COLUMN_PEER_PORT,\n    SESSION_COLUMN_PEER_PORT_RANDOM_ON_START,\n    SESSION_COLUMN_PORT_FORWARDING_ENABLED,\n    SESSION_COLUMN_UTP_ENABLED,\n  } from '~helpers/constants/columns';\n\n  let loadingInitial = true;\n  let submitLoading = false;\n\n  let peerPort = null;\n  let randomizePeerPort = null;\n  let portForwardingEnabled = null;\n  let utpEnabled = null;\n\n  let portOpen = false;\n\n  session.getPortTest().then((isPortOpen) => {\n    portOpen = isPortOpen;\n  });\n\n  session\n    .addColumns([\n      SESSION_COLUMN_PEER_PORT,\n      SESSION_COLUMN_PEER_PORT_RANDOM_ON_START,\n      SESSION_COLUMN_PORT_FORWARDING_ENABLED,\n      SESSION_COLUMN_UTP_ENABLED,\n    ])\n    .then(($session) => {\n      peerPort = $session[SESSION_COLUMN_PEER_PORT];\n      randomizePeerPort = $session[SESSION_COLUMN_PEER_PORT_RANDOM_ON_START];\n      portForwardingEnabled = $session[SESSION_COLUMN_PORT_FORWARDING_ENABLED];\n      utpEnabled = $session[SESSION_COLUMN_UTP_ENABLED];\n      loadingInitial = false;\n    })\n    .catch(() => {\n      alerts.add(\n        'Unable to fetch the data for that action right now. Try again later.',\n        'negative'\n      );\n    });\n\n  const handleSubmit = () => {\n    submitLoading = true;\n\n    session\n      .update({\n        'peer-port': peerPort,\n        'peer-port-random-on-start': randomizePeerPort,\n        'port-forwarding-enabled': portForwardingEnabled,\n        'utp-enabled': utpEnabled,\n      })\n      .then(() => {\n        alerts.add('Succesfully saved network settings');\n      })\n      .catch(() => {\n        alerts.add(\n          'Failed saving network settings, please try again',\n          'negative'\n        );\n      })\n      .finally(() => {\n        submitLoading = false;\n      });\n  };\n</script>\n\n<div class=\"wrapper\" class:loading-initial=\"{loadingInitial}\">\n  <Icon name=\"SpinnerIcon\" />\n  <form on:submit|preventDefault=\"{handleSubmit}\">\n    <Header text=\"Listening port\" />\n    <Input\n      label=\"Peer listening port\"\n      bind:value=\"{peerPort}\"\n      type=\"number\"\n      hint=\"Port is {portOpen ? 'open' : 'closed'}\"\n    />\n    <Checkbox\n      label=\"Randomize port on launch\"\n      bind:checked=\"{randomizePeerPort}\"\n    />\n    <Checkbox\n      label=\"Use port forwarding from my router\"\n      bind:checked=\"{portForwardingEnabled}\"\n    />\n\n    <Header text=\"Options\" />\n    <Checkbox\n      label=\"Enable uTP for peer communication\"\n      bind:checked=\"{utpEnabled}\"\n    />\n\n    <div class=\"buttons\">\n      <Button type=\"button\" priority=\"tertiary\" on:click=\"{modals.close}\">\n        Cancel\n      </Button>\n      <Button type=\"submit\" priority=\"primary\" loading=\"{submitLoading}\">\n        Save settings\n      </Button>\n    </div>\n  </form>\n</div>\n\n<style>\n  .wrapper {\n    min-height: 100%;\n    display: flex;\n  }\n\n  .wrapper.loading-initial {\n    align-items: center;\n    justify-content: center;\n    fill: var(--color-modal-loading);\n  }\n\n  .wrapper > :global(.icon) {\n    position: absolute;\n    height: 30px;\n    width: 30px;\n    display: none;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  .wrapper.loading-initial > :global(.icon) {\n    display: inherit;\n  }\n\n  .wrapper.loading-initial form {\n    visibility: hidden;\n  }\n\n  form {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    line-height: 1;\n    color: var(--color-modal-text);\n  }\n\n  form :global(.checkbox) {\n    margin-bottom: 15px;\n  }\n\n  .buttons {\n    flex-grow: 1;\n    align-items: flex-end;\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n  }\n</style>\n"],"names":["ctx","button0","$on","modals","close","insert","target","div1","anchor","append","form","div0","loadingInitial","submitLoading","peerPort","randomizePeerPort","portForwardingEnabled","utpEnabled","portOpen","session","getPortTest","then","isPortOpen","$$invalidate","addColumns","SESSION_COLUMN_PEER_PORT","SESSION_COLUMN_PEER_PORT_RANDOM_ON_START","SESSION_COLUMN_PORT_FORWARDING_ENABLED","SESSION_COLUMN_UTP_ENABLED","$session","catch","alerts","add","handleSubmit","update","finally","value"],"mappings":"uUAoG0E,8EAGD,kSArBpDA,EAAQ,GAAG,OAAS,uCAFd,IAARA,EAAQ,cAARA,EAAQ,4HAMW,IAAjBA,EAAiB,gBAAjBA,EAAiB,yIAII,IAArBA,EAAqB,gBAArBA,EAAqB,yJAMX,IAAVA,EAAU,gBAAVA,EAAU,mJAI4BC,EAAAC,IAAA,QAAAC,EAAOC,gEAGTJ,EAAa,yZA7BzBA,EAAc,YAA3DK,EAkCMC,EAAAC,EAAAC,sBAhCJC,EA+BOF,EAAAG,qHARLD,EAOMC,EAAAC,4DA9ByBX,EAAY,0DAM1BA,EAAQ,GAAG,OAAS,kCAFtBA,EAAQ,gEAMNA,EAAiB,iEAIjBA,EAAqB,iEAMrBA,EAAU,gHAO0BA,EAAa,mFA7BzBA,EAAc,6cA5DrD,IAAAY,GAAiB,EACjBC,GAAgB,EAEhBC,EAAW,KACXC,EAAoB,KACpBC,EAAwB,KACxBC,EAAa,KAEbC,GAAW,EAEfC,EAAQC,cAAcC,MAAMC,IAC1BC,EAAA,EAAAL,EAAWI,EAAU,IAGvBH,EACGK,WAAU,CACTC,EACAC,EACAC,EACAC,IAEDP,MAAMQ,QACLf,EAAWe,EAASJ,QACpBV,EAAoBc,EAASH,QAC7BV,EAAwBa,EAASF,QACjCV,EAAaY,EAASD,IACtBL,EAAA,EAAAX,GAAiB,EAAK,IAEvBkB,OAAK,KACJC,EAAOC,IACL,uEACA,WAAU,yBAIEC,KAChBV,EAAA,EAAAV,GAAgB,GAEhBM,EACGe,OAAM,CACL,YAAapB,EACb,4BAA6BC,EAC7B,0BAA2BC,EAC3B,cAAeC,IAEhBI,MAAI,KACHU,EAAOC,IAAI,qCAAoC,IAEhDF,OAAK,KACJC,EAAOC,IACL,mDACA,WAAU,IAGbG,SAAO,KACNZ,EAAA,EAAAV,GAAgB,EAAK,iBAWVC,EAAQsB,sBAMNrB,EAAiBqB,sBAIjBpB,EAAqBoB,sBAMrBnB,EAAUmB"}