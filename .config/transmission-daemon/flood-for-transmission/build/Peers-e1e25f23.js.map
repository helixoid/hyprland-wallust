{"version":3,"file":"Peers-e1e25f23.js","sources":["../../src/components/Modal/Settings/Peers.svelte"],"sourcesContent":["<script>\n  import Header from './Header.svelte';\n  import Checkbox from '~components/Checkbox';\n  import Input from '~components/Input';\n  import Icon from '~components/Icon';\n  import Button from '~components/Button';\n  import Select from '~components/Select';\n  import { session, modals, alerts } from '~helpers/stores';\n  import {\n    SESSION_COLUMN_BLOCKLIST_ENABLED,\n    SESSION_COLUMN_BLOCKLIST_SIZE,\n    SESSION_COLUMN_BLOCKLIST_URL,\n    SESSION_COLUMN_DHT_ENABLED,\n    SESSION_COLUMN_ENCRYPTION,\n    SESSION_COLUMN_LPD_ENABLED,\n    SESSION_COLUMN_PEER_LIMIT_GLOBAL,\n    SESSION_COLUMN_PEER_LIMIT_PER_TORRENT,\n    SESSION_COLUMN_PEX_ENABLED,\n  } from '~helpers/constants/columns';\n\n  let loadingInitial = true;\n  let submitLoading = false;\n  let blocklistUpdateLoading = false;\n\n  let maxPeersPerTorrent = null;\n  let maxPeersOverall = null;\n  let pexEnabled = null;\n  let dhtEnabled = null;\n  let lpdEnabled = null;\n  let blocklistUrl = null;\n  let blocklistEnabled = null;\n  let blocklistSize = 0;\n  let encryption = null;\n\n  const numberFormatter = new Intl.NumberFormat();\n  const encryptionOptions = [\n    { label: 'Required', value: 'required' },\n    { label: 'Preferred', value: 'preferred' },\n    { label: 'Tolerated', value: 'tolerated' },\n  ];\n\n  session\n    .addColumns([\n      SESSION_COLUMN_BLOCKLIST_ENABLED,\n      SESSION_COLUMN_BLOCKLIST_SIZE,\n      SESSION_COLUMN_BLOCKLIST_URL,\n      SESSION_COLUMN_DHT_ENABLED,\n      SESSION_COLUMN_ENCRYPTION,\n      SESSION_COLUMN_LPD_ENABLED,\n      SESSION_COLUMN_PEER_LIMIT_GLOBAL,\n      SESSION_COLUMN_PEER_LIMIT_PER_TORRENT,\n      SESSION_COLUMN_PEX_ENABLED,\n    ])\n    .then(($session) => {\n      maxPeersPerTorrent = $session[SESSION_COLUMN_PEER_LIMIT_PER_TORRENT];\n      maxPeersOverall = $session[SESSION_COLUMN_PEER_LIMIT_GLOBAL];\n      pexEnabled = $session[SESSION_COLUMN_PEX_ENABLED];\n      dhtEnabled = $session[SESSION_COLUMN_DHT_ENABLED];\n      lpdEnabled = $session[SESSION_COLUMN_LPD_ENABLED];\n      blocklistUrl = $session[SESSION_COLUMN_BLOCKLIST_URL];\n      blocklistEnabled = $session[SESSION_COLUMN_BLOCKLIST_ENABLED];\n      blocklistSize = $session[SESSION_COLUMN_BLOCKLIST_SIZE];\n      encryption = $session[SESSION_COLUMN_ENCRYPTION];\n      loadingInitial = false;\n    })\n    .catch(() => {\n      alerts.add(\n        'Unable to fetch the data for that action right now. Try again later.',\n        'negative'\n      );\n    });\n\n  const updateBlocklist = () => {\n    blocklistUpdateLoading = true;\n\n    session\n      .update({\n        'blocklist-url': blocklistUrl,\n      })\n      .then(session.updateBlocklist)\n      .then((newBlocklistSize) => {\n        blocklistSize = newBlocklistSize;\n        alerts.add('Succesfully updated your blocklist');\n      })\n      .catch(() => {\n        alerts.add(\n          'Failed updating your blocklist, please try again',\n          'negative'\n        );\n      })\n      .finally(() => {\n        blocklistUpdateLoading = false;\n      });\n  };\n\n  const handleSubmit = () => {\n    submitLoading = true;\n\n    session\n      .update({\n        'peer-limit-per-torrent': maxPeersPerTorrent,\n        'peer-limit-global': maxPeersOverall,\n        'pex-enabled': pexEnabled,\n        'dht-enabled': dhtEnabled,\n        'lpd-enabled': lpdEnabled,\n        'blocklist-url': blocklistUrl,\n        'blocklist-enabled': blocklistEnabled,\n        'encryption': encryption,\n      })\n      .then(() => {\n        alerts.add('Succesfully saved peers settings');\n      })\n      .catch(() => {\n        alerts.add(\n          'Failed saving peers settings, please try again',\n          'negative'\n        );\n      })\n      .finally(() => {\n        submitLoading = false;\n      });\n  };\n</script>\n\n<div class=\"wrapper\" class:loading-initial=\"{loadingInitial}\">\n  <Icon name=\"SpinnerIcon\" />\n  <form on:submit|preventDefault=\"{handleSubmit}\">\n    <Header text=\"Connections\" />\n    <Input\n      bind:value=\"{maxPeersPerTorrent}\"\n      label=\"Max peers per torrent\"\n      type=\"number\"\n    />\n    <Input\n      bind:value=\"{maxPeersOverall}\"\n      label=\"Max peers overall\"\n      type=\"number\"\n    />\n\n    <Header text=\"Options\" />\n    <Checkbox bind:checked=\"{pexEnabled}\" label=\"Use PEX to find more peers\" />\n    <Checkbox bind:checked=\"{dhtEnabled}\" label=\"Use DHT to find more peers\" />\n    <Checkbox bind:checked=\"{lpdEnabled}\" label=\"Use LPD to find more peers\" />\n\n    <Header text=\"Privacy\" />\n    <Select\n      options=\"{encryptionOptions}\"\n      on:change=\"{(event) => (encryption = event.detail)}\"\n      value=\"{encryption}\"\n      direction=\"below\"\n      label=\"Encryption\"\n    />\n\n    <Header text=\"Blocklist\" />\n    <Checkbox bind:checked=\"{blocklistEnabled}\" label=\"Enable blocklist\" />\n    <Input\n      bind:value=\"{blocklistUrl}\"\n      type=\"url\"\n      hint=\"Blocklist has {numberFormatter.format(blocklistSize)} rules\"\n    />\n    <div class=\"update-wrapper\">\n      <Button\n        type=\"button\"\n        priority=\"tertiary\"\n        on:click=\"{updateBlocklist}\"\n        loading=\"{blocklistUpdateLoading}\">Update blocklist</Button\n      >\n    </div>\n\n    <div class=\"buttons\">\n      <Button type=\"button\" priority=\"tertiary\" on:click=\"{modals.close}\">\n        Cancel\n      </Button>\n      <Button type=\"submit\" priority=\"primary\" loading=\"{submitLoading}\">\n        Save settings\n      </Button>\n    </div>\n  </form>\n</div>\n\n<style>\n  .wrapper {\n    min-height: 100%;\n    display: flex;\n  }\n\n  .wrapper.loading-initial {\n    align-items: center;\n    justify-content: center;\n    fill: var(--color-modal-loading);\n  }\n\n  .wrapper > :global(.icon) {\n    position: absolute;\n    height: 30px;\n    width: 30px;\n    display: none;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  .wrapper.loading-initial > :global(.icon) {\n    display: inherit;\n  }\n\n  .wrapper.loading-initial form {\n    visibility: hidden;\n  }\n\n  form {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    line-height: 1;\n    color: var(--color-modal-text);\n  }\n\n  form :global(.checkbox),\n  form :global(.select) {\n    margin-bottom: 15px;\n  }\n\n  .update-wrapper {\n    margin-bottom: 15px;\n  }\n\n  .buttons {\n    flex-grow: 1;\n    align-items: flex-end;\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n  }\n</style>\n"],"names":["ctx","format","button1","$on","modals","close","insert","target","div2","anchor","append","form","div0","div1","loadingInitial","submitLoading","blocklistUpdateLoading","maxPeersPerTorrent","maxPeersOverall","pexEnabled","dhtEnabled","lpdEnabled","blocklistUrl","blocklistEnabled","blocklistSize","encryption","numberFormatter","Intl","NumberFormat","session","addColumns","SESSION_COLUMN_BLOCKLIST_ENABLED","SESSION_COLUMN_BLOCKLIST_SIZE","SESSION_COLUMN_BLOCKLIST_URL","SESSION_COLUMN_DHT_ENABLED","SESSION_COLUMN_ENCRYPTION","SESSION_COLUMN_LPD_ENABLED","SESSION_COLUMN_PEER_LIMIT_GLOBAL","SESSION_COLUMN_PEER_LIMIT_PER_TORRENT","SESSION_COLUMN_PEX_ENABLED","then","$session","$$invalidate","catch","alerts","add","label","value","updateBlocklist","update","newBlocklistSize","finally","handleSubmit","event","detail"],"mappings":"uXAqK2C,wFAK+B,8EAGD,uWA5CpC,IAAlBA,EAAkB,cAAlBA,EAAkB,oIAKH,IAAfA,EAAe,cAAfA,EAAe,iKAMK,IAAVA,EAAU,gBAAVA,EAAU,iIACA,IAAVA,EAAU,gBAAVA,EAAU,iIACA,IAAVA,EAAU,gBAAVA,EAAU,kHAIvBA,EAAiB,UAEnBA,EAAU,sKAMqB,IAAhBA,EAAgB,gBAAhBA,EAAgB,mGAIlBA,EAAe,IAACC,OAAOD,EAAa,KAAA,sBAFhC,IAAZA,EAAY,cAAZA,EAAY,mHASbA,EAAsB,2DADrBA,EAAe,iGAMyBE,GAAAC,IAAA,QAAAC,EAAOC,iEAGTL,EAAa,ioBAjDzBA,EAAc,YAA3DM,EAsDMC,EAAAC,EAAAC,sBApDJC,EAmDOF,EAAAG,8OAjBLD,EAOMC,EAAAC,0BAENF,EAOMC,EAAAE,sEAlDyBb,EAAY,yDAG5BA,EAAkB,+DAKlBA,EAAe,iEAMLA,EAAU,iEACVA,EAAU,kEACVA,EAAU,wDAMzBA,EAAU,uDAMKA,EAAgB,0EAIlBA,EAAe,IAACC,OAAOD,EAAa,KAAA,qCAF5CA,EAAY,yDASbA,EAAsB,gJAQiBA,EAAa,yFAjDzBA,EAAc,ixBAxGrD,IAAAc,GAAiB,EACjBC,GAAgB,EAChBC,GAAyB,EAEzBC,EAAqB,KACrBC,EAAkB,KAClBC,EAAa,KACbC,EAAa,KACbC,EAAa,KACbC,EAAe,KACfC,EAAmB,KACnBC,EAAgB,EAChBC,EAAa,WAEXC,EAAe,IAAOC,KAAKC,aAOjCC,EACGC,WAAU,CACTC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IAEDC,MAAMC,QACLxB,EAAqBwB,EAASH,QAC9BpB,EAAkBuB,EAASJ,QAC3BlB,EAAasB,EAASF,QACtBnB,EAAaqB,EAASP,QACtBb,EAAaoB,EAASL,QACtBd,EAAemB,EAASR,QACxBV,EAAmBkB,EAASV,SAC5BP,EAAgBiB,EAAST,SACzBP,EAAagB,EAASN,IACtBO,EAAA,EAAA5B,GAAiB,EAAK,IAEvB6B,OAAK,KACJC,EAAOC,IACL,uEACA,WAAU,qCAjCO,CACnB,CAAAC,MAAO,WAAYC,MAAO,YAC1B,CAAAD,MAAO,YAAaC,MAAO,aAC3B,CAAAD,MAAO,YAAaC,MAAO,cAkCVC,KACnBN,EAAA,EAAA1B,GAAyB,GAEzBa,EACGoB,OACC,CAAA,gBAAiB3B,IAElBkB,KAAKX,EAAQmB,iBACbR,MAAMU,IACLR,EAAA,GAAAlB,EAAgB0B,GAChBN,EAAOC,IAAI,qCAAoC,IAEhDF,OAAK,KACJC,EAAOC,IACL,mDACA,WAAU,IAGbM,SAAO,KACNT,EAAA,EAAA1B,GAAyB,EAAK,KAIlBoC,KAChBV,EAAA,EAAA3B,GAAgB,GAEhBc,EACGoB,OAAM,CACL,yBAA0BhC,EAC1B,oBAAqBC,EACrB,cAAeC,EACf,cAAeC,EACf,cAAeC,EACf,gBAAiBC,EACjB,oBAAqBC,EACPE,eAEfe,MAAI,KACHI,EAAOC,IAAI,mCAAkC,IAE9CF,OAAK,KACJC,EAAOC,IACL,iDACA,WAAU,IAGbM,SAAO,KACNT,EAAA,EAAA3B,GAAgB,EAAK,iBAUVE,EAAkB8B,sBAKlB7B,EAAe6B,sBAML5B,EAAU4B,sBACV3B,EAAU2B,sBACV1B,EAAU0B,UAKpBM,GAAWX,EAAA,GAAAjB,EAAa4B,EAAMC,oBAOpB/B,EAAgBwB,sBAE1BzB,EAAYyB"}